image: python:latest
stages:
  - testing
#   - styling
#   - build
  - deploy

variables:
  IMAGE: ${CI_REGISTRY}/${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}
  HEROKU_APP_NAME: kapokala
  HEROKU_REGISTRY_IMAGE: registry.heroku.com/${HEROKU_APP_NAME}/web

# docker-image:
#   stage: build
#   image: docker:stable
#   services:
#     - docker:dind
    
#   variables:
#     DOCKER_DRIVER: overlay2
    
#   before_script:
#     - apk update
#     - apk upgrade
#     - apk add python python-dev py-pip build-base libffi-dev openssl-dev gcc libc-dev make
#     - apk add --update curl && rm -rf /var/cache/apk/*
#     - curl -L https://github.com/docker/compose/releases/download/1.8.0/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose
#     - chmod +x /usr/local/bin/docker-compose
#     - pip install docker-compose

#   script:
#     - docker-compose build


python-testing:
  stage: testing
  script:
    - curl -sL https://deb.nodesource.com/setup_8.x | bash -
    - apt install -y nodejs npm
    - chmod +x ./test.sh
    - ./test.sh -i backend
  artifacts:
    paths:
      - src/htmlcov

react-testing:
  image: node:8
  stage: testing
  script:
    - cd Kapo_Front/kapo
    # - npm install -g yarn yarnpkg
    - yarn install
    - yarn test
  artifacts:
    paths:
      - src/front/coverage

heroku:
  stage: deploy
  script:
  - apt-get update -qy
  - apt-get install -y ruby-dev
  - gem install dpl
  - dpl --provider=heroku --app=$HEROKU_APP_NAME --api-key=$HEROKU_AUTHENTICATION_TOKEN
  only:
  - master